pptname;invariant;invariantType;variables;tp;fp;enter;bug
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&characters&items(main.getComicIndividual&Input):::ENTER;input != null;daikon.inv.unary.scalar.NonZero;(input);0;0;1;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&characters&items(main.getComicIndividual&Input):::EXIT;input != null;daikon.inv.unary.scalar.NonZero;(input);0;0;1;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&characters&items(main.getComicIndividual&Input):::EXIT;return != null;daikon.inv.unary.scalar.NonZero;(return);0;0;1;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&collectedIssues(main.getComicIndividual&Input):::ENTER;input != null;daikon.inv.unary.scalar.NonZero;(input);0;0;1;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&collectedIssues(main.getComicIndividual&Input):::EXIT;input != null;daikon.inv.unary.scalar.NonZero;(input);0;0;1;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&collectedIssues(main.getComicIndividual&Input):::EXIT;return != null;daikon.inv.unary.scalar.NonZero;(return);0;0;1;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&collections(main.getComicIndividual&Input):::ENTER;input != null;daikon.inv.unary.scalar.NonZero;(input);0;0;1;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&collections(main.getComicIndividual&Input):::EXIT;input != null;daikon.inv.unary.scalar.NonZero;(input);0;0;1;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&collections(main.getComicIndividual&Input):::EXIT;return != null;daikon.inv.unary.scalar.NonZero;(return);0;0;1;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&creators&items(main.getComicIndividual&Input):::ENTER;input != null;daikon.inv.unary.scalar.NonZero;(input);0;0;1;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&creators&items(main.getComicIndividual&Input):::EXIT;input != null;daikon.inv.unary.scalar.NonZero;(input);0;0;1;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&creators&items(main.getComicIndividual&Input):::EXIT;return != null;daikon.inv.unary.scalar.NonZero;(return);0;0;1;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&dates(main.getComicIndividual&Input):::ENTER;input != null;daikon.inv.unary.scalar.NonZero;(input);0;0;1;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&dates(main.getComicIndividual&Input):::EXIT;input != null;daikon.inv.unary.scalar.NonZero;(input);0;0;1;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&dates(main.getComicIndividual&Input):::EXIT;return != null;daikon.inv.unary.scalar.NonZero;(return);0;0;1;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&events&items(main.getComicIndividual&Input):::ENTER;input != null;daikon.inv.unary.scalar.NonZero;(input);0;0;1;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&events&items(main.getComicIndividual&Input):::EXIT;input != null;daikon.inv.unary.scalar.NonZero;(input);0;0;1;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&events&items(main.getComicIndividual&Input):::EXIT;return != null;daikon.inv.unary.scalar.NonZero;(return);0;0;1;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&images(main.getComicIndividual&Input):::ENTER;input != null;daikon.inv.unary.scalar.NonZero;(input);0;0;1;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&images(main.getComicIndividual&Input):::EXIT;input != null;daikon.inv.unary.scalar.NonZero;(input);0;0;1;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&images(main.getComicIndividual&Input):::EXIT;return != null;daikon.inv.unary.scalar.NonZero;(return);0;0;1;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&images(main.getComicIndividual&Input):::EXIT;"return.extension == ""jpg""";daikon.inv.unary.string.OneOfString;(return.extension);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&prices(main.getComicIndividual&Input):::ENTER;input != null;daikon.inv.unary.scalar.NonZero;(input);0;0;1;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&prices(main.getComicIndividual&Input):::EXIT;input != null;daikon.inv.unary.scalar.NonZero;(input);0;0;1;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&prices(main.getComicIndividual&Input):::EXIT;return != null;daikon.inv.unary.scalar.NonZero;(return);0;0;1;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&prices(main.getComicIndividual&Input):::EXIT;"return.type one of { ""digitalPurchasePrice"", ""printPrice"" }";daikon.inv.unary.string.OneOfString;(return.type);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&prices(main.getComicIndividual&Input):::EXIT;return.price >= 0.0;daikon.inv.unary.scalar.LowerBoundFloat;(return.price);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&stories&items(main.getComicIndividual&Input):::ENTER;input != null;daikon.inv.unary.scalar.NonZero;(input);0;0;1;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&stories&items(main.getComicIndividual&Input):::EXIT;input != null;daikon.inv.unary.scalar.NonZero;(input);0;0;1;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&stories&items(main.getComicIndividual&Input):::EXIT;return != null;daikon.inv.unary.scalar.NonZero;(return);0;0;1;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&textObjects(main.getComicIndividual&Input):::ENTER;input != null;daikon.inv.unary.scalar.NonZero;(input);0;0;1;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&textObjects(main.getComicIndividual&Input):::EXIT;input != null;daikon.inv.unary.scalar.NonZero;(input);0;0;1;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&textObjects(main.getComicIndividual&Input):::EXIT;return != null;daikon.inv.unary.scalar.NonZero;(return);0;0;1;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&textObjects(main.getComicIndividual&Input):::EXIT;"return.language == ""en-us""";daikon.inv.unary.string.OneOfString;(return.language);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&urls(main.getComicIndividual&Input):::ENTER;input != null;daikon.inv.unary.scalar.NonZero;(input);0;0;1;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&urls(main.getComicIndividual&Input):::EXIT;input != null;daikon.inv.unary.scalar.NonZero;(input);0;0;1;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&urls(main.getComicIndividual&Input):::EXIT;return != null;daikon.inv.unary.scalar.NonZero;(return);0;0;1;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&variants(main.getComicIndividual&Input):::ENTER;input != null;daikon.inv.unary.scalar.NonZero;(input);0;0;1;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&variants(main.getComicIndividual&Input):::EXIT;input != null;daikon.inv.unary.scalar.NonZero;(input);0;0;1;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&variants(main.getComicIndividual&Input):::EXIT;return != null;daikon.inv.unary.scalar.NonZero;(return);0;0;1;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::ENTER;input != null;daikon.inv.unary.scalar.NonZero;(input);0;0;1;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;input.comicId == return.id;daikon.inv.binary.twoScalar.IntEqual;(input.comicId, return.id);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.creators.returned == size(return.creators.items[]);daikon.inv.binary.twoScalar.IntEqual;(return.creators.returned, size(return.creators.items[..]));1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.characters.returned == size(return.characters.items[]);daikon.inv.binary.twoScalar.IntEqual;(return.characters.returned, size(return.characters.items[..]));1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.stories.returned == size(return.stories.items[]);daikon.inv.binary.twoScalar.IntEqual;(return.stories.returned, size(return.stories.items[..]));1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.events.available == return.events.returned;daikon.inv.binary.twoScalar.IntEqual;(return.events.available, return.events.returned);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.events.available == size(return.events.items[]);daikon.inv.binary.twoScalar.IntEqual;(return.events.available, size(return.events.items[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;input != null;daikon.inv.unary.scalar.NonZero;(input);0;0;1;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return != null;daikon.inv.unary.scalar.NonZero;(return);0;0;1;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.digitalId >= 0;daikon.inv.unary.scalar.LowerBound;(return.digitalId);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.pageCount >= 0;daikon.inv.unary.scalar.LowerBound;(return.pageCount);0;0;0;1
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.textObjects != null;daikon.inv.unary.scalar.NonZero;(return.textObjects);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.textObjects[] elements != null;daikon.inv.unary.sequence.EltNonZero;(return.textObjects[..]);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.urls != null;daikon.inv.unary.scalar.NonZero;(return.urls);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.urls[] elements != null;daikon.inv.unary.sequence.EltNonZero;(return.urls[..]);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.series != null;daikon.inv.unary.scalar.NonZero;(return.series);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.variants != null;daikon.inv.unary.scalar.NonZero;(return.variants);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.variants[] elements != null;daikon.inv.unary.sequence.EltNonZero;(return.variants[..]);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.collections != null;daikon.inv.unary.scalar.NonZero;(return.collections);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.collections[] elements != null;daikon.inv.unary.sequence.EltNonZero;(return.collections[..]);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.collectedIssues != null;daikon.inv.unary.scalar.NonZero;(return.collectedIssues);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.collectedIssues[] elements != null;daikon.inv.unary.sequence.EltNonZero;(return.collectedIssues[..]);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.dates != null;daikon.inv.unary.scalar.NonZero;(return.dates);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.dates[] elements != null;daikon.inv.unary.sequence.EltNonZero;(return.dates[..]);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.prices != null;daikon.inv.unary.scalar.NonZero;(return.prices);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.prices[] elements != null;daikon.inv.unary.sequence.EltNonZero;(return.prices[..]);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.thumbnail != null;daikon.inv.unary.scalar.NonZero;(return.thumbnail);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;"return.thumbnail.extension == ""jpg""";daikon.inv.unary.string.OneOfString;(return.thumbnail.extension);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.images != null;daikon.inv.unary.scalar.NonZero;(return.images);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.images[] elements != null;daikon.inv.unary.sequence.EltNonZero;(return.images[..]);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.creators != null;daikon.inv.unary.scalar.NonZero;(return.creators);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.creators.available >= 0;daikon.inv.unary.scalar.LowerBound;(return.creators.available);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.creators.items != null;daikon.inv.unary.scalar.NonZero;(return.creators.items);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.creators.items[] elements != null;daikon.inv.unary.sequence.EltNonZero;(return.creators.items[..]);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.characters != null;daikon.inv.unary.scalar.NonZero;(return.characters);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.characters.available >= 1;daikon.inv.unary.scalar.LowerBound;(return.characters.available);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.characters.returned >= 1;daikon.inv.unary.scalar.LowerBound;(return.characters.returned);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.characters.items != null;daikon.inv.unary.scalar.NonZero;(return.characters.items);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.characters.items[] elements != null;daikon.inv.unary.sequence.EltNonZero;(return.characters.items[..]);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.stories != null;daikon.inv.unary.scalar.NonZero;(return.stories);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.stories.items != null;daikon.inv.unary.scalar.NonZero;(return.stories.items);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.stories.items[] elements != null;daikon.inv.unary.sequence.EltNonZero;(return.stories.items[..]);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.events != null;daikon.inv.unary.scalar.NonZero;(return.events);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.events.available one of { 0, 1 };daikon.inv.unary.scalar.OneOfScalar;(return.events.available);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.events.items != null;daikon.inv.unary.scalar.NonZero;(return.events.items);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.events.items[] elements != null;daikon.inv.unary.sequence.EltNonZero;(return.events.items[..]);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.dates[]) one of { 2, 3, 4 };daikon.inv.unary.scalar.OneOfScalar;(size(return.dates[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.prices[]) one of { 1, 2 };daikon.inv.unary.scalar.OneOfScalar;(size(return.prices[..]));1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;input.comicId != return.digitalId;daikon.inv.binary.twoScalar.IntNonEqual;(input.comicId, return.digitalId);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;input.comicId > return.pageCount;daikon.inv.binary.twoScalar.IntGreaterThan;(input.comicId, return.pageCount);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;input.comicId > return.creators.available;daikon.inv.binary.twoScalar.IntGreaterThan;(input.comicId, return.creators.available);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;input.comicId > return.creators.returned;daikon.inv.binary.twoScalar.IntGreaterThan;(input.comicId, return.creators.returned);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;input.comicId > return.characters.available;daikon.inv.binary.twoScalar.IntGreaterThan;(input.comicId, return.characters.available);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;input.comicId > return.characters.returned;daikon.inv.binary.twoScalar.IntGreaterThan;(input.comicId, return.characters.returned);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;input.comicId > return.stories.available;daikon.inv.binary.twoScalar.IntGreaterThan;(input.comicId, return.stories.available);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;input.comicId > return.stories.returned;daikon.inv.binary.twoScalar.IntGreaterThan;(input.comicId, return.stories.returned);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;input.comicId > return.events.available;daikon.inv.binary.twoScalar.IntGreaterThan;(input.comicId, return.events.available);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;input.comicId > size(return.textObjects[]);daikon.inv.binary.twoScalar.IntGreaterThan;(input.comicId, size(return.textObjects[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;input.comicId > size(return.urls[]);daikon.inv.binary.twoScalar.IntGreaterThan;(input.comicId, size(return.urls[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;input.comicId > size(return.variants[]);daikon.inv.binary.twoScalar.IntGreaterThan;(input.comicId, size(return.variants[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;input.comicId > size(return.collections[]);daikon.inv.binary.twoScalar.IntGreaterThan;(input.comicId, size(return.collections[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;input.comicId > size(return.collectedIssues[]);daikon.inv.binary.twoScalar.IntGreaterThan;(input.comicId, size(return.collectedIssues[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;input.comicId > size(return.dates[]);daikon.inv.binary.twoScalar.IntGreaterThan;(input.comicId, size(return.dates[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;input.comicId > size(return.prices[]);daikon.inv.binary.twoScalar.IntGreaterThan;(input.comicId, size(return.prices[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;input.comicId > size(return.images[]);daikon.inv.binary.twoScalar.IntGreaterThan;(input.comicId, size(return.images[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.digitalId != return.characters.available;daikon.inv.binary.twoScalar.IntNonEqual;(return.digitalId, return.characters.available);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.digitalId != return.characters.returned;daikon.inv.binary.twoScalar.IntNonEqual;(return.digitalId, return.characters.returned);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.digitalId != return.stories.available;daikon.inv.binary.twoScalar.IntNonEqual;(return.digitalId, return.stories.available);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.digitalId != return.stories.returned;daikon.inv.binary.twoScalar.IntNonEqual;(return.digitalId, return.stories.returned);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.digitalId != size(return.urls[]);daikon.inv.binary.twoScalar.IntNonEqual;(return.digitalId, size(return.urls[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.digitalId >= size(return.collections[])-1;daikon.inv.binary.twoScalar.IntGreaterEqual;(return.digitalId, size(return.collections[..])-1);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.digitalId != size(return.dates[]);daikon.inv.binary.twoScalar.IntNonEqual;(return.digitalId, size(return.dates[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.digitalId != size(return.dates[])-1;daikon.inv.binary.twoScalar.IntNonEqual;(return.digitalId, size(return.dates[..])-1);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.digitalId != size(return.prices[]);daikon.inv.binary.twoScalar.IntNonEqual;(return.digitalId, size(return.prices[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.digitalId >= size(return.prices[])-1;daikon.inv.binary.twoScalar.IntGreaterEqual;(return.digitalId, size(return.prices[..])-1);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.digitalId != size(return.stories.items[])-1;daikon.inv.binary.twoScalar.IntNonEqual;(return.digitalId, size(return.stories.items[..])-1);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.digitalId >= size(return.events.items[])-1;daikon.inv.binary.twoScalar.IntGreaterEqual;(return.digitalId, size(return.events.items[..])-1);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.pageCount != return.stories.available;daikon.inv.binary.twoScalar.IntNonEqual;(return.pageCount, return.stories.available);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.pageCount != return.stories.returned;daikon.inv.binary.twoScalar.IntNonEqual;(return.pageCount, return.stories.returned);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.pageCount != size(return.collectedIssues[])-1;daikon.inv.binary.twoScalar.IntNonEqual;(return.pageCount, size(return.collectedIssues[..])-1);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.pageCount % size(return.prices[]) == 0;daikon.inv.binary.twoScalar.NumericInt$Divides;(return.pageCount, size(return.prices[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.pageCount >= size(return.events.items[])-1;daikon.inv.binary.twoScalar.IntGreaterEqual;(return.pageCount, size(return.events.items[..])-1);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.creators.available >= return.creators.returned;daikon.inv.binary.twoScalar.IntGreaterEqual;(return.creators.available, return.creators.returned);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.creators.available >= size(return.collections[])-1;daikon.inv.binary.twoScalar.IntGreaterEqual;(return.creators.available, size(return.collections[..])-1);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.creators.available >= size(return.events.items[])-1;daikon.inv.binary.twoScalar.IntGreaterEqual;(return.creators.available, size(return.events.items[..])-1);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.creators.returned >= size(return.collections[])-1;daikon.inv.binary.twoScalar.IntGreaterEqual;(return.creators.returned, size(return.collections[..])-1);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.creators.returned >= size(return.events.items[])-1;daikon.inv.binary.twoScalar.IntGreaterEqual;(return.creators.returned, size(return.events.items[..])-1);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.characters.available >= return.characters.returned;daikon.inv.binary.twoScalar.IntGreaterEqual;(return.characters.available, return.characters.returned);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.characters.available >= return.events.available;daikon.inv.binary.twoScalar.IntGreaterEqual;(return.characters.available, return.events.available);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.characters.available >= size(return.textObjects[])-1;daikon.inv.binary.twoScalar.IntGreaterEqual;(return.characters.available, size(return.textObjects[..])-1);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.characters.available >= size(return.collections[]);daikon.inv.binary.twoScalar.IntGreaterEqual;(return.characters.available, size(return.collections[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.characters.available != size(return.collectedIssues[]);daikon.inv.binary.twoScalar.IntNonEqual;(return.characters.available, size(return.collectedIssues[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.characters.available >= size(return.prices[])-1;daikon.inv.binary.twoScalar.IntGreaterEqual;(return.characters.available, size(return.prices[..])-1);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.characters.returned >= return.events.available;daikon.inv.binary.twoScalar.IntGreaterEqual;(return.characters.returned, return.events.available);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.characters.returned >= size(return.textObjects[])-1;daikon.inv.binary.twoScalar.IntGreaterEqual;(return.characters.returned, size(return.textObjects[..])-1);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.characters.returned >= size(return.collections[]);daikon.inv.binary.twoScalar.IntGreaterEqual;(return.characters.returned, size(return.collections[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.characters.returned >= size(return.prices[])-1;daikon.inv.binary.twoScalar.IntGreaterEqual;(return.characters.returned, size(return.prices[..])-1);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.stories.available >= return.stories.returned;daikon.inv.binary.twoScalar.IntGreaterEqual;(return.stories.available, return.stories.returned);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.stories.available > return.events.available;daikon.inv.binary.twoScalar.IntGreaterThan;(return.stories.available, return.events.available);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.stories.available >= size(return.textObjects[])-1;daikon.inv.binary.twoScalar.IntGreaterEqual;(return.stories.available, size(return.textObjects[..])-1);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.stories.available >= size(return.collections[]);daikon.inv.binary.twoScalar.IntGreaterEqual;(return.stories.available, size(return.collections[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.stories.available > size(return.collectedIssues[]);daikon.inv.binary.twoScalar.IntGreaterThan;(return.stories.available, size(return.collectedIssues[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.stories.available >= size(return.prices[])-1;daikon.inv.binary.twoScalar.IntGreaterEqual;(return.stories.available, size(return.prices[..])-1);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.stories.returned >= size(return.textObjects[])-1;daikon.inv.binary.twoScalar.IntGreaterEqual;(return.stories.returned, size(return.textObjects[..])-1);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.stories.returned >= size(return.collections[]);daikon.inv.binary.twoScalar.IntGreaterEqual;(return.stories.returned, size(return.collections[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.stories.returned >= size(return.collectedIssues[]);daikon.inv.binary.twoScalar.IntGreaterEqual;(return.stories.returned, size(return.collectedIssues[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.stories.returned >= size(return.prices[])-1;daikon.inv.binary.twoScalar.IntGreaterEqual;(return.stories.returned, size(return.prices[..])-1);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.events.available <= size(return.urls[]);daikon.inv.binary.twoScalar.IntLessEqual;(return.events.available, size(return.urls[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.events.available <= size(return.dates[])-1;daikon.inv.binary.twoScalar.IntLessEqual;(return.events.available, size(return.dates[..])-1);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.events.available <= size(return.prices[]);daikon.inv.binary.twoScalar.IntLessEqual;(return.events.available, size(return.prices[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.events.available <= size(return.images[]);daikon.inv.binary.twoScalar.IntLessEqual;(return.events.available, size(return.images[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.events.available <= size(return.stories.items[])-1;daikon.inv.binary.twoScalar.IntLessEqual;(return.events.available, size(return.stories.items[..])-1);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.textObjects[]) <= size(return.dates[]);daikon.inv.binary.twoScalar.IntLessEqual;(size(return.textObjects[..]), size(return.dates[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.textObjects[]) >= size(return.events.items[])-1;daikon.inv.binary.twoScalar.IntGreaterEqual;(size(return.textObjects[..]), size(return.events.items[..])-1);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.textObjects[])-1 <= size(return.urls[]);daikon.inv.binary.twoScalar.IntLessEqual;(size(return.textObjects[..])-1, size(return.urls[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.textObjects[])-1 <= size(return.dates[])-1;daikon.inv.binary.twoScalar.IntLessEqual;(size(return.textObjects[..])-1, size(return.dates[..])-1);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.textObjects[])-1 <= size(return.prices[]);daikon.inv.binary.twoScalar.IntLessEqual;(size(return.textObjects[..])-1, size(return.prices[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.textObjects[])-1 <= size(return.images[]);daikon.inv.binary.twoScalar.IntLessEqual;(size(return.textObjects[..])-1, size(return.images[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.urls[]) >= size(return.collections[]);daikon.inv.binary.twoScalar.IntGreaterEqual;(size(return.urls[..]), size(return.collections[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.urls[]) != size(return.collectedIssues[])-1;daikon.inv.binary.twoScalar.IntNonEqual;(size(return.urls[..]), size(return.collectedIssues[..])-1);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.urls[]) <= size(return.dates[]);daikon.inv.binary.twoScalar.IntLessEqual;(size(return.urls[..]), size(return.dates[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.urls[]) % size(return.prices[]) == 0;daikon.inv.binary.twoScalar.NumericInt$Divides;(size(return.urls[..]), size(return.prices[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.urls[]) >= size(return.prices[]);daikon.inv.binary.twoScalar.IntGreaterEqual;(size(return.urls[..]), size(return.prices[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.urls[])-1 >= size(return.collections[])-1;daikon.inv.binary.twoScalar.IntGreaterEqual;(size(return.urls[..])-1, size(return.collections[..])-1);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.urls[])-1 <= size(return.dates[])-1;daikon.inv.binary.twoScalar.IntLessEqual;(size(return.urls[..])-1, size(return.dates[..])-1);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.urls[])-1 >= size(return.prices[])-1;daikon.inv.binary.twoScalar.IntGreaterEqual;(size(return.urls[..])-1, size(return.prices[..])-1);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.urls[])-1 >= size(return.events.items[])-1;daikon.inv.binary.twoScalar.IntGreaterEqual;(size(return.urls[..])-1, size(return.events.items[..])-1);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.variants[]) >= size(return.events.items[])-1;daikon.inv.binary.twoScalar.IntGreaterEqual;(size(return.variants[..]), size(return.events.items[..])-1);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.collections[]) <= size(return.dates[]);daikon.inv.binary.twoScalar.IntLessEqual;(size(return.collections[..]), size(return.dates[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.collections[]) >= size(return.events.items[])-1;daikon.inv.binary.twoScalar.IntGreaterEqual;(size(return.collections[..]), size(return.events.items[..])-1);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.collections[])-1 <= size(return.dates[])-1;daikon.inv.binary.twoScalar.IntLessEqual;(size(return.collections[..])-1, size(return.dates[..])-1);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.collections[])-1 <= size(return.characters.items[])-1;daikon.inv.binary.twoScalar.IntLessEqual;(size(return.collections[..])-1, size(return.characters.items[..])-1);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.collections[])-1 <= size(return.stories.items[])-1;daikon.inv.binary.twoScalar.IntLessEqual;(size(return.collections[..])-1, size(return.stories.items[..])-1);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.collectedIssues[]) != size(return.dates[]);daikon.inv.binary.twoScalar.IntNonEqual;(size(return.collectedIssues[..]), size(return.dates[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.collectedIssues[]) % size(return.dates[])-1 == 0;daikon.inv.binary.twoScalar.NumericInt$Divides;(size(return.collectedIssues[..]), size(return.dates[..])-1);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.collectedIssues[]) % size(return.prices[]) == 0;daikon.inv.binary.twoScalar.NumericInt$Divides;(size(return.collectedIssues[..]), size(return.prices[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.collectedIssues[]) >= size(return.events.items[])-1;daikon.inv.binary.twoScalar.IntGreaterEqual;(size(return.collectedIssues[..]), size(return.events.items[..])-1);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.collectedIssues[])-1 != size(return.dates[]);daikon.inv.binary.twoScalar.IntNonEqual;(size(return.collectedIssues[..])-1, size(return.dates[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.collectedIssues[])-1 != size(return.dates[])-1;daikon.inv.binary.twoScalar.IntNonEqual;(size(return.collectedIssues[..])-1, size(return.dates[..])-1);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.collectedIssues[])-1 != size(return.prices[]);daikon.inv.binary.twoScalar.IntNonEqual;(size(return.collectedIssues[..])-1, size(return.prices[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.collectedIssues[])-1 != size(return.images[]);daikon.inv.binary.twoScalar.IntNonEqual;(size(return.collectedIssues[..])-1, size(return.images[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.collectedIssues[])-1 <= size(return.stories.items[])-1;daikon.inv.binary.twoScalar.IntLessEqual;(size(return.collectedIssues[..])-1, size(return.stories.items[..])-1);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.dates[]) % size(return.prices[]) == 0;daikon.inv.binary.twoScalar.NumericInt$Divides;(size(return.dates[..]), size(return.prices[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.dates[])-1 >= size(return.prices[]);daikon.inv.binary.twoScalar.IntGreaterEqual;(size(return.dates[..])-1, size(return.prices[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.prices[])-1 <= size(return.images[]);daikon.inv.binary.twoScalar.IntLessEqual;(size(return.prices[..])-1, size(return.images[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.prices[])-1 >= size(return.events.items[])-1;daikon.inv.binary.twoScalar.IntGreaterEqual;(size(return.prices[..])-1, size(return.events.items[..])-1);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.images[])-1 >= size(return.events.items[])-1;daikon.inv.binary.twoScalar.IntGreaterEqual;(size(return.images[..])-1, size(return.events.items[..])-1);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.characters.items[])-1 >= size(return.events.items[])-1;daikon.inv.binary.twoScalar.IntGreaterEqual;(size(return.characters.items[..])-1, size(return.events.items[..])-1);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::ENTER;input != null;daikon.inv.unary.scalar.NonZero;(input);0;0;1;0
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT;return.data.offset == size(return.data.results[])-1;daikon.inv.binary.twoScalar.IntEqual;(return.data.offset, size(return.data.results[..])-1);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT;return.data.total == return.data.count;daikon.inv.binary.twoScalar.IntEqual;(return.data.total, return.data.count);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT;return.data.total == size(return.data.results[]);daikon.inv.binary.twoScalar.IntEqual;(return.data.total, size(return.data.results[..]));1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT;return.data.results[return.data.offset] == return.data.results[return.data.total-1];daikon.inv.binary.twoScalar.IntEqual;(return.data.results[return.data.offset], return.data.results[return.data.total-1]);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT;return.data.results[return.data.offset] == return.data.results[return.data.count-1];daikon.inv.binary.twoScalar.IntEqual;(return.data.results[return.data.offset], return.data.results[return.data.count-1]);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT;input != null;daikon.inv.unary.scalar.NonZero;(input);0;0;1;0
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT;return != null;daikon.inv.unary.scalar.NonZero;(return);0;0;1;0
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT;return.code == 200;daikon.inv.unary.scalar.OneOfScalar;(return.code);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT;"return.status == ""Ok""";daikon.inv.unary.string.OneOfString;(return.status);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT;"return.copyright == ""\251 2022 MARVEL""";daikon.inv.unary.string.OneOfString;(return.copyright);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT;"return.attributionText == ""Data provided by Marvel. \251 2022 MARVEL""";daikon.inv.unary.string.OneOfString;(return.attributionText);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT;"return.attributionHTML == ""<a href=\""http://marvel.com\"">Data provided by Marvel. \251 2022 MARVEL</a>""";daikon.inv.unary.string.OneOfString;(return.attributionHTML);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT;return.data != null;daikon.inv.unary.scalar.NonZero;(return.data);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT;return.data.limit == 20;daikon.inv.unary.scalar.OneOfScalar;(return.data.limit);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT;return.data.total == 1;daikon.inv.unary.scalar.OneOfScalar;(return.data.total);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT;return.data.results != null;daikon.inv.unary.scalar.NonZero;(return.data.results);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT;return.data.results[] elements != null;daikon.inv.unary.sequence.EltNonZero;(return.data.results[..]);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT;input.comicId != return.code;daikon.inv.binary.twoScalar.IntNonEqual;(input.comicId, return.code);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT;input.comicId > return.data.limit;daikon.inv.binary.twoScalar.IntGreaterThan;(input.comicId, return.data.limit);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT;input.comicId > return.data.total;daikon.inv.binary.twoScalar.IntGreaterThan;(input.comicId, return.data.total);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT;return.data.results[] elements == return.data.results[return.data.offset];daikon.inv.binary.sequenceScalar.SeqIntEqual;(return.data.results[..], return.data.results[return.data.offset]);1;0;0;0
