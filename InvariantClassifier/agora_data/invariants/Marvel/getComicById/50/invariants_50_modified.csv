pptname;invariant;invariantType;variables;tp;fp;enter;bug
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&characters&items(main.getComicIndividual&Input):::EXIT;LENGTH(return.resourceURI)==54;daikon.inv.unary.string.FixedLengthString;(return.resourceURI);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&characters&items(main.getComicIndividual&Input):::EXIT;return.resourceURI is Url;daikon.inv.unary.string.IsUrl;(return.resourceURI);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&collections(main.getComicIndividual&Input):::EXIT;return.resourceURI is Url;daikon.inv.unary.string.IsUrl;(return.resourceURI);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&creators&items(main.getComicIndividual&Input):::EXIT;return.resourceURI is Url;daikon.inv.unary.string.IsUrl;(return.resourceURI);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&images(main.getComicIndividual&Input):::EXIT;LENGTH(return.path)==57;daikon.inv.unary.string.FixedLengthString;(return.path);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&images(main.getComicIndividual&Input):::EXIT;return.path is Url;daikon.inv.unary.string.IsUrl;(return.path);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&images(main.getComicIndividual&Input):::EXIT;"return.extension == ""jpg""";daikon.inv.unary.string.OneOfString;(return.extension);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&images(main.getComicIndividual&Input):::EXIT;LENGTH(return.extension)==3;daikon.inv.unary.string.FixedLengthString;(return.extension);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&prices(main.getComicIndividual&Input):::EXIT;"return.type one of { ""digitalPurchasePrice"", ""printPrice"" }";daikon.inv.unary.string.OneOfString;(return.type);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&prices(main.getComicIndividual&Input):::EXIT;return.price >= 0.0;daikon.inv.unary.scalar.LowerBoundFloat;(return.price);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&stories&items(main.getComicIndividual&Input):::EXIT;return.resourceURI is Url;daikon.inv.unary.string.IsUrl;(return.resourceURI);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&textObjects(main.getComicIndividual&Input):::EXIT;"return.type one of { ""70th_winner_desc"", ""issue_preview_text"", ""issue_solicit_text"" }";daikon.inv.unary.string.OneOfString;(return.type);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&textObjects(main.getComicIndividual&Input):::EXIT;"return.language == ""en-us""";daikon.inv.unary.string.OneOfString;(return.language);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&textObjects(main.getComicIndividual&Input):::EXIT;LENGTH(return.language)==5;daikon.inv.unary.string.FixedLengthString;(return.language);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&urls(main.getComicIndividual&Input):::EXIT;return.url is Url;daikon.inv.unary.string.IsUrl;(return.url);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&variants(main.getComicIndividual&Input):::EXIT;return.resourceURI is Url;daikon.inv.unary.string.IsUrl;(return.resourceURI);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;input.comicId == return.id;daikon.inv.binary.twoScalar.IntEqual;(input.comicId, return.id);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.creators.returned == size(return.creators.items[]);daikon.inv.binary.twoScalar.IntEqual;(return.creators.returned, size(return.creators.items[..]));1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.characters.available == return.characters.returned;daikon.inv.binary.twoScalar.IntEqual;(return.characters.available, return.characters.returned);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.characters.available == size(return.characters.items[]);daikon.inv.binary.twoScalar.IntEqual;(return.characters.available, size(return.characters.items[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.stories.available == return.stories.returned;daikon.inv.binary.twoScalar.IntEqual;(return.stories.available, return.stories.returned);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.stories.available == size(return.stories.items[]);daikon.inv.binary.twoScalar.IntEqual;(return.stories.available, size(return.stories.items[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.events.available == return.events.returned;daikon.inv.binary.twoScalar.IntEqual;(return.events.available, return.events.returned);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.events.available == size(return.collectedIssues[]);daikon.inv.binary.twoScalar.IntEqual;(return.events.available, size(return.collectedIssues[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.events.available == size(return.events.items[]);daikon.inv.binary.twoScalar.IntEqual;(return.events.available, size(return.events.items[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.digitalId >= 0;daikon.inv.unary.scalar.LowerBound;(return.digitalId);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.issueNumber >= 0.0;daikon.inv.unary.scalar.LowerBoundFloat;(return.issueNumber);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;"return.variantDescription one of { ""GARNER VARIANT"", ""WHITE VARIANT"" }";daikon.inv.unary.string.OneOfString;(return.variantDescription);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;LENGTH(return.isbn)==17;daikon.inv.unary.string.FixedLengthString;(return.isbn);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;LENGTH(return.diamondCode)==9;daikon.inv.unary.string.FixedLengthString;(return.diamondCode);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;LENGTH(return.ean)==20;daikon.inv.unary.string.FixedLengthString;(return.ean);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.pageCount >= 0;daikon.inv.unary.scalar.LowerBound;(return.pageCount);0;0;0;1
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.resourceURI is Url;daikon.inv.unary.string.IsUrl;(return.resourceURI);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.series.resourceURI is Url;daikon.inv.unary.string.IsUrl;(return.series.resourceURI);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.collectedIssues[] == [];daikon.inv.unary.sequence.OneOfSequence;(return.collectedIssues[..]);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.thumbnail.path is Url;daikon.inv.unary.string.IsUrl;(return.thumbnail.path);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;"return.thumbnail.extension == ""jpg""";daikon.inv.unary.string.OneOfString;(return.thumbnail.extension);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;LENGTH(return.thumbnail.extension)==3;daikon.inv.unary.string.FixedLengthString;(return.thumbnail.extension);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.creators.available >= 0;daikon.inv.unary.scalar.LowerBound;(return.creators.available);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.creators.collectionURI is Url;daikon.inv.unary.string.IsUrl;(return.creators.collectionURI);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.characters.available >= 1;daikon.inv.unary.scalar.LowerBound;(return.characters.available);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.characters.collectionURI is Url;daikon.inv.unary.string.IsUrl;(return.characters.collectionURI);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.stories.available >= 2;daikon.inv.unary.scalar.LowerBound;(return.stories.available);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.stories.collectionURI is Url;daikon.inv.unary.string.IsUrl;(return.stories.collectionURI);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.events.collectionURI is Url;daikon.inv.unary.string.IsUrl;(return.events.collectionURI);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.events.items[] == [];daikon.inv.unary.sequence.OneOfSequence;(return.events.items[..]);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.textObjects[]) one of { 0, 1, 2 };daikon.inv.unary.scalar.OneOfScalar;(size(return.textObjects[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.collections[]) one of { 0, 1, 4 };daikon.inv.unary.scalar.OneOfScalar;(size(return.collections[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.dates[]) one of { 2, 3, 4 };daikon.inv.unary.scalar.OneOfScalar;(size(return.dates[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.prices[]) one of { 1, 2 };daikon.inv.unary.scalar.OneOfScalar;(size(return.prices[..]));1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;input.comicId > return.pageCount;daikon.inv.binary.twoScalar.IntGreaterThan;(input.comicId, return.pageCount);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;input.comicId > return.creators.available;daikon.inv.binary.twoScalar.IntGreaterThan;(input.comicId, return.creators.available);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;input.comicId > return.creators.returned;daikon.inv.binary.twoScalar.IntGreaterThan;(input.comicId, return.creators.returned);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;input.comicId > return.characters.available;daikon.inv.binary.twoScalar.IntGreaterThan;(input.comicId, return.characters.available);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;input.comicId > return.stories.available;daikon.inv.binary.twoScalar.IntGreaterThan;(input.comicId, return.stories.available);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;input.comicId > return.events.available;daikon.inv.binary.twoScalar.IntGreaterThan;(input.comicId, return.events.available);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;input.comicId > size(return.textObjects[]);daikon.inv.binary.twoScalar.IntGreaterThan;(input.comicId, size(return.textObjects[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;input.comicId > size(return.urls[]);daikon.inv.binary.twoScalar.IntGreaterThan;(input.comicId, size(return.urls[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;input.comicId > size(return.variants[]);daikon.inv.binary.twoScalar.IntGreaterThan;(input.comicId, size(return.variants[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;input.comicId > size(return.collections[]);daikon.inv.binary.twoScalar.IntGreaterThan;(input.comicId, size(return.collections[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;input.comicId > size(return.dates[]);daikon.inv.binary.twoScalar.IntGreaterThan;(input.comicId, size(return.dates[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;input.comicId > size(return.prices[]);daikon.inv.binary.twoScalar.IntGreaterThan;(input.comicId, size(return.prices[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;input.comicId > size(return.images[]);daikon.inv.binary.twoScalar.IntGreaterThan;(input.comicId, size(return.images[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.digitalId >= return.events.available;daikon.inv.binary.twoScalar.IntGreaterEqual;(return.digitalId, return.events.available);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.digitalId >= size(return.collections[]);daikon.inv.binary.twoScalar.IntGreaterEqual;(return.digitalId, size(return.collections[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.variantDescription is a substring of return.title;daikon.inv.binary.twoString.StdString$SubString;(return.title, return.variantDescription);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.pageCount >= return.events.available;daikon.inv.binary.twoScalar.IntGreaterEqual;(return.pageCount, return.events.available);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.pageCount >= size(return.variants[]);daikon.inv.binary.twoScalar.IntGreaterEqual;(return.pageCount, size(return.variants[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.resourceURI is a substring of return.creators.collectionURI;daikon.inv.binary.twoString.StdString$SubString;(return.resourceURI, return.creators.collectionURI);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.resourceURI is a substring of return.characters.collectionURI;daikon.inv.binary.twoString.StdString$SubString;(return.resourceURI, return.characters.collectionURI);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.resourceURI is a substring of return.stories.collectionURI;daikon.inv.binary.twoString.StdString$SubString;(return.resourceURI, return.stories.collectionURI);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.resourceURI is a substring of return.events.collectionURI;daikon.inv.binary.twoString.StdString$SubString;(return.resourceURI, return.events.collectionURI);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.creators.available >= return.creators.returned;daikon.inv.binary.twoScalar.IntGreaterEqual;(return.creators.available, return.creators.returned);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.creators.available >= return.events.available;daikon.inv.binary.twoScalar.IntGreaterEqual;(return.creators.available, return.events.available);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.creators.returned >= return.events.available;daikon.inv.binary.twoScalar.IntGreaterEqual;(return.creators.returned, return.events.available);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.creators.items[] is a superset of return.events.items[];daikon.inv.binary.twoSequence.SuperSet;(return.creators.items[..], return.events.items[..]);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.characters.available >= size(return.collections[]);daikon.inv.binary.twoScalar.IntGreaterEqual;(return.characters.available, size(return.collections[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.characters.items[] is a superset of return.events.items[];daikon.inv.binary.twoSequence.SuperSet;(return.characters.items[..], return.events.items[..]);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.stories.available >= size(return.textObjects[]);daikon.inv.binary.twoScalar.IntGreaterEqual;(return.stories.available, size(return.textObjects[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.stories.available >= size(return.collections[]);daikon.inv.binary.twoScalar.IntGreaterEqual;(return.stories.available, size(return.collections[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.stories.available >= size(return.prices[]);daikon.inv.binary.twoScalar.IntGreaterEqual;(return.stories.available, size(return.prices[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.stories.items[] is a superset of return.events.items[];daikon.inv.binary.twoSequence.SuperSet;(return.stories.items[..], return.events.items[..]);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.events.available <= size(return.textObjects[]);daikon.inv.binary.twoScalar.IntLessEqual;(return.events.available, size(return.textObjects[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.events.available <= size(return.variants[]);daikon.inv.binary.twoScalar.IntLessEqual;(return.events.available, size(return.variants[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.events.available <= size(return.collections[]);daikon.inv.binary.twoScalar.IntLessEqual;(return.events.available, size(return.collections[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.events.available <= size(return.images[]);daikon.inv.binary.twoScalar.IntLessEqual;(return.events.available, size(return.images[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.textObjects[]) <= size(return.urls[]);daikon.inv.binary.twoScalar.IntLessEqual;(size(return.textObjects[..]), size(return.urls[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.textObjects[]) <= size(return.prices[]);daikon.inv.binary.twoScalar.IntLessEqual;(size(return.textObjects[..]), size(return.prices[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.urls[]) >= size(return.collections[]);daikon.inv.binary.twoScalar.IntGreaterEqual;(size(return.urls[..]), size(return.collections[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.urls[]) <= size(return.dates[]);daikon.inv.binary.twoScalar.IntLessEqual;(size(return.urls[..]), size(return.dates[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.urls[]) >= size(return.prices[]);daikon.inv.binary.twoScalar.IntGreaterEqual;(size(return.urls[..]), size(return.prices[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.collections[]) <= size(return.dates[]);daikon.inv.binary.twoScalar.IntLessEqual;(size(return.collections[..]), size(return.dates[..]));0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT;return.data.total == return.data.count;daikon.inv.binary.twoScalar.IntEqual;(return.data.total, return.data.count);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT;return.data.total == size(return.data.results[]);daikon.inv.binary.twoScalar.IntEqual;(return.data.total, size(return.data.results[..]));1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT;return.data.results[return.data.offset] == return.data.results[return.data.total-1];daikon.inv.binary.twoScalar.IntEqual;(return.data.results[return.data.offset], return.data.results[return.data.total-1]);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT;return.data.results[return.data.offset] == return.data.results[return.data.count-1];daikon.inv.binary.twoScalar.IntEqual;(return.data.results[return.data.offset], return.data.results[return.data.count-1]);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT;return.code == 200;daikon.inv.unary.scalar.OneOfScalar;(return.code);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT;"return.status == ""Ok""";daikon.inv.unary.string.OneOfString;(return.status);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT;LENGTH(return.status)==2;daikon.inv.unary.string.FixedLengthString;(return.status);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT;"return.copyright == ""\251 2022 MARVEL""";daikon.inv.unary.string.OneOfString;(return.copyright);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT;LENGTH(return.copyright)==13;daikon.inv.unary.string.FixedLengthString;(return.copyright);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT;"return.attributionText == ""Data provided by Marvel. \251 2022 MARVEL""";daikon.inv.unary.string.OneOfString;(return.attributionText);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT;LENGTH(return.attributionText)==38;daikon.inv.unary.string.FixedLengthString;(return.attributionText);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT;"return.attributionHTML == ""<a href=\""http://marvel.com\"">Data provided by Marvel. \251 2022 MARVEL</a>""";daikon.inv.unary.string.OneOfString;(return.attributionHTML);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT;LENGTH(return.attributionHTML)==70;daikon.inv.unary.string.FixedLengthString;(return.attributionHTML);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT;return.data.offset == 0;daikon.inv.unary.scalar.OneOfScalar;(return.data.offset);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT;return.data.limit == 20;daikon.inv.unary.scalar.OneOfScalar;(return.data.limit);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT;return.data.total == 1;daikon.inv.unary.scalar.OneOfScalar;(return.data.total);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT;LENGTH(return.etag)==40;daikon.inv.unary.string.FixedLengthString;(return.etag);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT;input.comicId > return.code;daikon.inv.binary.twoScalar.IntGreaterThan;(input.comicId, return.code);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT;input.comicId > return.data.offset;daikon.inv.binary.twoScalar.IntGreaterThan;(input.comicId, return.data.offset);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT;input.comicId > return.data.limit;daikon.inv.binary.twoScalar.IntGreaterThan;(input.comicId, return.data.limit);0;1;0;0
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT;input.comicId > return.data.total;daikon.inv.binary.twoScalar.IntGreaterThan;(input.comicId, return.data.total);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT;return.copyright is a substring of return.attributionText;daikon.inv.binary.twoString.StdString$SubString;(return.copyright, return.attributionText);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT;return.attributionText is a substring of return.attributionHTML;daikon.inv.binary.twoString.StdString$SubString;(return.attributionText, return.attributionHTML);1;0;0;0
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT;return.data.results[] elements == return.data.results[return.data.offset];daikon.inv.binary.sequenceScalar.SeqIntEqual;(return.data.results[..], return.data.results[return.data.offset]);1;0;0;0
