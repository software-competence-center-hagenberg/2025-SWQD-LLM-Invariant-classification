pptname;invariant;invariantType;variables;tp;fp;enter;bug
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::ENTER;input.homepage is Url;daikon.inv.unary.string.IsUrl;(input.homepage);0;0;1;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::ENTER;"input.visibility one of { ""private"", ""public"" }";daikon.inv.unary.string.OneOfString;(input.visibility);0;0;1;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::ENTER;"input.squash_merge_commit_title one of { ""COMMIT_OR_PR_TITLE"", ""PR_TITLE"" }";daikon.inv.unary.string.OneOfString;(input.squash_merge_commit_title);0;0;1;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::ENTER;"input.squash_merge_commit_message one of { ""BLANK"", ""COMMIT_MESSAGES"", ""PR_BODY"" }";daikon.inv.unary.string.OneOfString;(input.squash_merge_commit_message);0;0;1;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::ENTER;"input.merge_commit_title one of { ""MERGE_MESSAGE"", ""PR_TITLE"" }";daikon.inv.unary.string.OneOfString;(input.merge_commit_title);0;0;1;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::ENTER;"input.merge_commit_message one of { ""BLANK"", ""PR_BODY"", ""PR_TITLE"" }";daikon.inv.unary.string.OneOfString;(input.merge_commit_message);0;0;1;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;input.org == return.owner.login;daikon.inv.binary.twoString.StringEqual;(input.org, return.owner.login);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;input.org == return.organization.login;daikon.inv.binary.twoString.StringEqual;(input.org, return.organization.login);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;input.description == return.description;daikon.inv.binary.twoString.StringEqual;(input.description, return.description);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;input.homepage == return.homepage;daikon.inv.binary.twoString.StringEqual;(input.homepage, return.homepage);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;input.visibility == return.visibility;daikon.inv.binary.twoString.StringEqual;(input.visibility, return.visibility);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;input.has_issues == return.has_issues;daikon.inv.binary.twoScalar.IntEqual;(input.has_issues, return.has_issues);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;input.has_projects == return.has_projects;daikon.inv.binary.twoScalar.IntEqual;(input.has_projects, return.has_projects);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;input.has_wiki == return.has_wiki;daikon.inv.binary.twoScalar.IntEqual;(input.has_wiki, return.has_wiki);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;input.is_template == return.is_template;daikon.inv.binary.twoScalar.IntEqual;(input.is_template, return.is_template);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;input.license_template == return.license.key;daikon.inv.binary.twoString.StringEqual;(input.license_template, return.license.key);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;input.allow_squash_merge == return.allow_squash_merge;daikon.inv.binary.twoScalar.IntEqual;(input.allow_squash_merge, return.allow_squash_merge);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;input.allow_merge_commit == return.allow_merge_commit;daikon.inv.binary.twoScalar.IntEqual;(input.allow_merge_commit, return.allow_merge_commit);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;input.allow_rebase_merge == return.allow_rebase_merge;daikon.inv.binary.twoScalar.IntEqual;(input.allow_rebase_merge, return.allow_rebase_merge);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;input.delete_branch_on_merge == return.delete_branch_on_merge;daikon.inv.binary.twoScalar.IntEqual;(input.delete_branch_on_merge, return.delete_branch_on_merge);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;input.squash_merge_commit_title == return.squash_merge_commit_title;daikon.inv.binary.twoString.StringEqual;(input.squash_merge_commit_title, return.squash_merge_commit_title);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;input.squash_merge_commit_message == return.squash_merge_commit_message;daikon.inv.binary.twoString.StringEqual;(input.squash_merge_commit_message, return.squash_merge_commit_message);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;input.merge_commit_title == return.merge_commit_title;daikon.inv.binary.twoString.StringEqual;(input.merge_commit_title, return.merge_commit_title);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;input.merge_commit_message == return.merge_commit_message;daikon.inv.binary.twoString.StringEqual;(input.merge_commit_message, return.merge_commit_message);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.forks == return.forks_count;daikon.inv.binary.twoScalar.IntEqual;(return.forks, return.forks_count);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.forks == return.stargazers_count;daikon.inv.binary.twoScalar.IntEqual;(return.forks, return.stargazers_count);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.forks == return.watchers_count;daikon.inv.binary.twoScalar.IntEqual;(return.forks, return.watchers_count);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.forks == return.size;daikon.inv.binary.twoScalar.IntEqual;(return.forks, return.size);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.forks == return.open_issues_count;daikon.inv.binary.twoScalar.IntEqual;(return.forks, return.open_issues_count);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.forks == return.subscribers_count;daikon.inv.binary.twoScalar.IntEqual;(return.forks, return.subscribers_count);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.forks == return.network_count;daikon.inv.binary.twoScalar.IntEqual;(return.forks, return.network_count);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.forks == return.open_issues;daikon.inv.binary.twoScalar.IntEqual;(return.forks, return.open_issues);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.forks == return.watchers;daikon.inv.binary.twoScalar.IntEqual;(return.forks, return.watchers);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.forks == size(return.topics[]);daikon.inv.binary.twoScalar.IntEqual;(return.forks, size(return.topics[..]));1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.permissions.admin == return.has_downloads;daikon.inv.binary.twoScalar.IntEqual;(return.permissions.admin, return.has_downloads);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.permissions.pull == return.has_downloads;daikon.inv.binary.twoScalar.IntEqual;(return.permissions.pull, return.has_downloads);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.permissions.triage == return.has_downloads;daikon.inv.binary.twoScalar.IntEqual;(return.permissions.triage, return.has_downloads);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.permissions.push == return.has_downloads;daikon.inv.binary.twoScalar.IntEqual;(return.permissions.push, return.has_downloads);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.permissions.maintain == return.has_downloads;daikon.inv.binary.twoScalar.IntEqual;(return.permissions.maintain, return.has_downloads);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.owner.id == return.organization.id;daikon.inv.binary.twoScalar.IntEqual;(return.owner.id, return.organization.id);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.owner.node_id == return.organization.node_id;daikon.inv.binary.twoString.StringEqual;(return.owner.node_id, return.organization.node_id);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.owner.avatar_url == return.organization.avatar_url;daikon.inv.binary.twoString.StringEqual;(return.owner.avatar_url, return.organization.avatar_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.owner.gravatar_id == return.organization.gravatar_id;daikon.inv.binary.twoString.StringEqual;(return.owner.gravatar_id, return.organization.gravatar_id);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.owner.url == return.organization.url;daikon.inv.binary.twoString.StringEqual;(return.owner.url, return.organization.url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.owner.html_url == return.organization.html_url;daikon.inv.binary.twoString.StringEqual;(return.owner.html_url, return.organization.html_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.owner.followers_url == return.organization.followers_url;daikon.inv.binary.twoString.StringEqual;(return.owner.followers_url, return.organization.followers_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.owner.following_url == return.organization.following_url;daikon.inv.binary.twoString.StringEqual;(return.owner.following_url, return.organization.following_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.owner.gists_url == return.organization.gists_url;daikon.inv.binary.twoString.StringEqual;(return.owner.gists_url, return.organization.gists_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.owner.starred_url == return.organization.starred_url;daikon.inv.binary.twoString.StringEqual;(return.owner.starred_url, return.organization.starred_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.owner.subscriptions_url == return.organization.subscriptions_url;daikon.inv.binary.twoString.StringEqual;(return.owner.subscriptions_url, return.organization.subscriptions_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.owner.organizations_url == return.organization.organizations_url;daikon.inv.binary.twoString.StringEqual;(return.owner.organizations_url, return.organization.organizations_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.owner.repos_url == return.organization.repos_url;daikon.inv.binary.twoString.StringEqual;(return.owner.repos_url, return.organization.repos_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.owner.events_url == return.organization.events_url;daikon.inv.binary.twoString.StringEqual;(return.owner.events_url, return.organization.events_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.owner.received_events_url == return.organization.received_events_url;daikon.inv.binary.twoString.StringEqual;(return.owner.received_events_url, return.organization.received_events_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.owner.type == return.organization.type;daikon.inv.binary.twoString.StringEqual;(return.owner.type, return.organization.type);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.owner.site_admin == return.fork;daikon.inv.binary.twoScalar.IntEqual;(return.owner.site_admin, return.fork);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.organization.site_admin == return.fork;daikon.inv.binary.twoScalar.IntEqual;(return.organization.site_admin, return.fork);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.html_url == return.svn_url;daikon.inv.binary.twoString.StringEqual;(return.html_url, return.svn_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.fork == return.has_pages;daikon.inv.binary.twoScalar.IntEqual;(return.fork, return.has_pages);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.fork == return.archived;daikon.inv.binary.twoScalar.IntEqual;(return.fork, return.archived);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.fork == return.disabled;daikon.inv.binary.twoScalar.IntEqual;(return.fork, return.disabled);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.fork == return.allow_update_branch;daikon.inv.binary.twoScalar.IntEqual;(return.fork, return.allow_update_branch);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.fork == return.web_commit_signoff_required;daikon.inv.binary.twoScalar.IntEqual;(return.fork, return.web_commit_signoff_required);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.created_at == return.updated_at;daikon.inv.binary.twoString.StringEqual;(return.created_at, return.updated_at);0;1;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;input.homepage is Url;daikon.inv.unary.string.IsUrl;(input.homepage);0;0;1;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;"input.visibility one of { ""private"", ""public"" }";daikon.inv.unary.string.OneOfString;(input.visibility);0;0;1;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;"input.squash_merge_commit_title one of { ""COMMIT_OR_PR_TITLE"", ""PR_TITLE"" }";daikon.inv.unary.string.OneOfString;(input.squash_merge_commit_title);0;0;1;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;"input.squash_merge_commit_message one of { ""BLANK"", ""COMMIT_MESSAGES"", ""PR_BODY"" }";daikon.inv.unary.string.OneOfString;(input.squash_merge_commit_message);0;0;1;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;"input.merge_commit_title one of { ""MERGE_MESSAGE"", ""PR_TITLE"" }";daikon.inv.unary.string.OneOfString;(input.merge_commit_title);0;0;1;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;"input.merge_commit_message one of { ""BLANK"", ""PR_BODY"", ""PR_TITLE"" }";daikon.inv.unary.string.OneOfString;(input.merge_commit_message);0;0;1;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;LENGTH(return.node_id)==12;daikon.inv.unary.string.FixedLengthString;(return.node_id);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.license.url is Url;daikon.inv.unary.string.IsUrl;(return.license.url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;LENGTH(return.license.node_id)==16;daikon.inv.unary.string.FixedLengthString;(return.license.node_id);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;LENGTH(return.owner.node_id)==12;daikon.inv.unary.string.FixedLengthString;(return.owner.node_id);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;LENGTH(return.owner.avatar_url)==53;daikon.inv.unary.string.FixedLengthString;(return.owner.avatar_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.owner.avatar_url is Url;daikon.inv.unary.string.IsUrl;(return.owner.avatar_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;"return.owner.gravatar_id == """"";daikon.inv.unary.string.OneOfString;(return.owner.gravatar_id);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;LENGTH(return.owner.gravatar_id)==0;daikon.inv.unary.string.FixedLengthString;(return.owner.gravatar_id);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.owner.url is Url;daikon.inv.unary.string.IsUrl;(return.owner.url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.owner.html_url is Url;daikon.inv.unary.string.IsUrl;(return.owner.html_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.owner.followers_url is Url;daikon.inv.unary.string.IsUrl;(return.owner.followers_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.owner.following_url is Url;daikon.inv.unary.string.IsUrl;(return.owner.following_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.owner.gists_url is Url;daikon.inv.unary.string.IsUrl;(return.owner.gists_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.owner.starred_url is Url;daikon.inv.unary.string.IsUrl;(return.owner.starred_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.owner.subscriptions_url is Url;daikon.inv.unary.string.IsUrl;(return.owner.subscriptions_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.owner.organizations_url is Url;daikon.inv.unary.string.IsUrl;(return.owner.organizations_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.owner.repos_url is Url;daikon.inv.unary.string.IsUrl;(return.owner.repos_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.owner.events_url is Url;daikon.inv.unary.string.IsUrl;(return.owner.events_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.owner.received_events_url is Url;daikon.inv.unary.string.IsUrl;(return.owner.received_events_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;"return.owner.type == ""Organization""";daikon.inv.unary.string.OneOfString;(return.owner.type);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;LENGTH(return.owner.type)==12;daikon.inv.unary.string.FixedLengthString;(return.owner.type);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.html_url is Url;daikon.inv.unary.string.IsUrl;(return.html_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.fork == false;daikon.inv.unary.scalar.OneOfScalar;(return.fork);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.url is Url;daikon.inv.unary.string.IsUrl;(return.url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.archive_url is Url;daikon.inv.unary.string.IsUrl;(return.archive_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.assignees_url is Url;daikon.inv.unary.string.IsUrl;(return.assignees_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.blobs_url is Url;daikon.inv.unary.string.IsUrl;(return.blobs_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.branches_url is Url;daikon.inv.unary.string.IsUrl;(return.branches_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.collaborators_url is Url;daikon.inv.unary.string.IsUrl;(return.collaborators_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.comments_url is Url;daikon.inv.unary.string.IsUrl;(return.comments_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.commits_url is Url;daikon.inv.unary.string.IsUrl;(return.commits_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.compare_url is Url;daikon.inv.unary.string.IsUrl;(return.compare_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.contents_url is Url;daikon.inv.unary.string.IsUrl;(return.contents_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.contributors_url is Url;daikon.inv.unary.string.IsUrl;(return.contributors_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.deployments_url is Url;daikon.inv.unary.string.IsUrl;(return.deployments_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.downloads_url is Url;daikon.inv.unary.string.IsUrl;(return.downloads_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.events_url is Url;daikon.inv.unary.string.IsUrl;(return.events_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.forks_url is Url;daikon.inv.unary.string.IsUrl;(return.forks_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.git_commits_url is Url;daikon.inv.unary.string.IsUrl;(return.git_commits_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.git_refs_url is Url;daikon.inv.unary.string.IsUrl;(return.git_refs_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.git_tags_url is Url;daikon.inv.unary.string.IsUrl;(return.git_tags_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.issue_comment_url is Url;daikon.inv.unary.string.IsUrl;(return.issue_comment_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.issue_events_url is Url;daikon.inv.unary.string.IsUrl;(return.issue_events_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.issues_url is Url;daikon.inv.unary.string.IsUrl;(return.issues_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.keys_url is Url;daikon.inv.unary.string.IsUrl;(return.keys_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.labels_url is Url;daikon.inv.unary.string.IsUrl;(return.labels_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.languages_url is Url;daikon.inv.unary.string.IsUrl;(return.languages_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.merges_url is Url;daikon.inv.unary.string.IsUrl;(return.merges_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.milestones_url is Url;daikon.inv.unary.string.IsUrl;(return.milestones_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.notifications_url is Url;daikon.inv.unary.string.IsUrl;(return.notifications_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.pulls_url is Url;daikon.inv.unary.string.IsUrl;(return.pulls_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.releases_url is Url;daikon.inv.unary.string.IsUrl;(return.releases_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.stargazers_url is Url;daikon.inv.unary.string.IsUrl;(return.stargazers_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.statuses_url is Url;daikon.inv.unary.string.IsUrl;(return.statuses_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.subscribers_url is Url;daikon.inv.unary.string.IsUrl;(return.subscribers_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.subscription_url is Url;daikon.inv.unary.string.IsUrl;(return.subscription_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.tags_url is Url;daikon.inv.unary.string.IsUrl;(return.tags_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.teams_url is Url;daikon.inv.unary.string.IsUrl;(return.teams_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.trees_url is Url;daikon.inv.unary.string.IsUrl;(return.trees_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.clone_url is Url;daikon.inv.unary.string.IsUrl;(return.clone_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.hooks_url is Url;daikon.inv.unary.string.IsUrl;(return.hooks_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;"return.default_branch == ""main""";daikon.inv.unary.string.OneOfString;(return.default_branch);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;LENGTH(return.default_branch)==4;daikon.inv.unary.string.FixedLengthString;(return.default_branch);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.topics[] == [];daikon.inv.unary.stringsequence.OneOfStringSequence;(return.topics[..]);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.has_downloads == true;daikon.inv.unary.scalar.OneOfScalar;(return.has_downloads);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;LENGTH(return.pushed_at)==20;daikon.inv.unary.string.FixedLengthString;(return.pushed_at);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.pushed_at is Timestamp. Format: YYYY-MM-DDTHH:MM:SS.mmZ (Miliseconds are optional);daikon.inv.unary.string.dates.IsTimestampYYYYMMHHThhmmssmm;(return.pushed_at);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;LENGTH(return.created_at)==20;daikon.inv.unary.string.FixedLengthString;(return.created_at);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.created_at is Timestamp. Format: YYYY-MM-DDTHH:MM:SS.mmZ (Miliseconds are optional);daikon.inv.unary.string.dates.IsTimestampYYYYMMHHThhmmssmm;(return.created_at);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.template_repository == null;daikon.inv.unary.scalar.OneOfScalar;(return.template_repository);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.template_repository.owner == null;daikon.inv.unary.scalar.OneOfScalar;(return.template_repository.owner);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.template_repository.topics == null;daikon.inv.unary.scalar.OneOfScalar;(return.template_repository.topics);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.template_repository.permissions == null;daikon.inv.unary.scalar.OneOfScalar;(return.template_repository.permissions);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;"return.merge_commit_message one of { ""BLANK"", ""PR_BODY"", ""PR_TITLE"" }";daikon.inv.unary.string.OneOfString;(return.merge_commit_message);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;"return.merge_commit_title one of { ""MERGE_MESSAGE"", ""PR_TITLE"" }";daikon.inv.unary.string.OneOfString;(return.merge_commit_title);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;"return.squash_merge_commit_message one of { ""BLANK"", ""COMMIT_MESSAGES"", ""PR_BODY"" }";daikon.inv.unary.string.OneOfString;(return.squash_merge_commit_message);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;"return.squash_merge_commit_title one of { ""COMMIT_OR_PR_TITLE"", ""PR_TITLE"" }";daikon.inv.unary.string.OneOfString;(return.squash_merge_commit_title);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;input.org is a substring of return.full_name;daikon.inv.binary.twoString.StdString$SubString;(input.org, return.full_name);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;input.org is a substring of return.owner.url;daikon.inv.binary.twoString.StdString$SubString;(input.org, return.owner.url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;input.org is a substring of return.owner.html_url;daikon.inv.binary.twoString.StdString$SubString;(input.org, return.owner.html_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;input.team_id < return.id;daikon.inv.binary.twoScalar.IntLessThan;(input.team_id, return.id);0;1;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;input.team_id > return.forks;daikon.inv.binary.twoScalar.IntGreaterThan;(input.team_id, return.forks);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;input.team_id < return.owner.id;daikon.inv.binary.twoScalar.IntLessThan;(input.team_id, return.owner.id);0;1;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;input.license_template is a substring of return.license.url;daikon.inv.binary.twoString.StdString$SubString;(input.license_template, return.license.url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.id > return.forks;daikon.inv.binary.twoScalar.IntGreaterThan;(return.id, return.forks);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.id > return.owner.id;daikon.inv.binary.twoScalar.IntGreaterThan;(return.id, return.owner.id);0;1;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.name is a substring of return.full_name;daikon.inv.binary.twoString.StdString$SubString;(return.name, return.full_name);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.full_name is a substring of return.html_url;daikon.inv.binary.twoString.StdString$SubString;(return.full_name, return.html_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.full_name is a substring of return.url;daikon.inv.binary.twoString.StdString$SubString;(return.full_name, return.url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.full_name is a substring of return.git_url;daikon.inv.binary.twoString.StdString$SubString;(return.full_name, return.git_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.full_name is a substring of return.ssh_url;daikon.inv.binary.twoString.StdString$SubString;(return.full_name, return.ssh_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.license.key is a substring of return.license.url;daikon.inv.binary.twoString.StdString$SubString;(return.license.key, return.license.url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.forks < return.owner.id;daikon.inv.binary.twoScalar.IntLessThan;(return.forks, return.owner.id);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.owner.url is a substring of return.owner.followers_url;daikon.inv.binary.twoString.StdString$SubString;(return.owner.url, return.owner.followers_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.owner.url is a substring of return.owner.following_url;daikon.inv.binary.twoString.StdString$SubString;(return.owner.url, return.owner.following_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.owner.url is a substring of return.owner.gists_url;daikon.inv.binary.twoString.StdString$SubString;(return.owner.url, return.owner.gists_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.owner.url is a substring of return.owner.starred_url;daikon.inv.binary.twoString.StdString$SubString;(return.owner.url, return.owner.starred_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.owner.url is a substring of return.owner.subscriptions_url;daikon.inv.binary.twoString.StdString$SubString;(return.owner.url, return.owner.subscriptions_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.owner.url is a substring of return.owner.organizations_url;daikon.inv.binary.twoString.StdString$SubString;(return.owner.url, return.owner.organizations_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.owner.url is a substring of return.owner.repos_url;daikon.inv.binary.twoString.StdString$SubString;(return.owner.url, return.owner.repos_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.owner.url is a substring of return.owner.events_url;daikon.inv.binary.twoString.StdString$SubString;(return.owner.url, return.owner.events_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.owner.url is a substring of return.owner.received_events_url;daikon.inv.binary.twoString.StdString$SubString;(return.owner.url, return.owner.received_events_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.owner.html_url is a substring of return.html_url;daikon.inv.binary.twoString.StdString$SubString;(return.owner.html_url, return.html_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.html_url is a substring of return.clone_url;daikon.inv.binary.twoString.StdString$SubString;(return.html_url, return.clone_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.url is a substring of return.archive_url;daikon.inv.binary.twoString.StdString$SubString;(return.url, return.archive_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.url is a substring of return.assignees_url;daikon.inv.binary.twoString.StdString$SubString;(return.url, return.assignees_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.url is a substring of return.blobs_url;daikon.inv.binary.twoString.StdString$SubString;(return.url, return.blobs_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.url is a substring of return.branches_url;daikon.inv.binary.twoString.StdString$SubString;(return.url, return.branches_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.url is a substring of return.collaborators_url;daikon.inv.binary.twoString.StdString$SubString;(return.url, return.collaborators_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.url is a substring of return.comments_url;daikon.inv.binary.twoString.StdString$SubString;(return.url, return.comments_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.url is a substring of return.commits_url;daikon.inv.binary.twoString.StdString$SubString;(return.url, return.commits_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.url is a substring of return.compare_url;daikon.inv.binary.twoString.StdString$SubString;(return.url, return.compare_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.url is a substring of return.contents_url;daikon.inv.binary.twoString.StdString$SubString;(return.url, return.contents_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.url is a substring of return.contributors_url;daikon.inv.binary.twoString.StdString$SubString;(return.url, return.contributors_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.url is a substring of return.deployments_url;daikon.inv.binary.twoString.StdString$SubString;(return.url, return.deployments_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.url is a substring of return.downloads_url;daikon.inv.binary.twoString.StdString$SubString;(return.url, return.downloads_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.url is a substring of return.events_url;daikon.inv.binary.twoString.StdString$SubString;(return.url, return.events_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.url is a substring of return.forks_url;daikon.inv.binary.twoString.StdString$SubString;(return.url, return.forks_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.url is a substring of return.git_commits_url;daikon.inv.binary.twoString.StdString$SubString;(return.url, return.git_commits_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.url is a substring of return.git_refs_url;daikon.inv.binary.twoString.StdString$SubString;(return.url, return.git_refs_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.url is a substring of return.git_tags_url;daikon.inv.binary.twoString.StdString$SubString;(return.url, return.git_tags_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.url is a substring of return.issue_comment_url;daikon.inv.binary.twoString.StdString$SubString;(return.url, return.issue_comment_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.url is a substring of return.issue_events_url;daikon.inv.binary.twoString.StdString$SubString;(return.url, return.issue_events_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.url is a substring of return.issues_url;daikon.inv.binary.twoString.StdString$SubString;(return.url, return.issues_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.url is a substring of return.keys_url;daikon.inv.binary.twoString.StdString$SubString;(return.url, return.keys_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.url is a substring of return.labels_url;daikon.inv.binary.twoString.StdString$SubString;(return.url, return.labels_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.url is a substring of return.languages_url;daikon.inv.binary.twoString.StdString$SubString;(return.url, return.languages_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.url is a substring of return.merges_url;daikon.inv.binary.twoString.StdString$SubString;(return.url, return.merges_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.url is a substring of return.milestones_url;daikon.inv.binary.twoString.StdString$SubString;(return.url, return.milestones_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.url is a substring of return.notifications_url;daikon.inv.binary.twoString.StdString$SubString;(return.url, return.notifications_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.url is a substring of return.pulls_url;daikon.inv.binary.twoString.StdString$SubString;(return.url, return.pulls_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.url is a substring of return.releases_url;daikon.inv.binary.twoString.StdString$SubString;(return.url, return.releases_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.url is a substring of return.stargazers_url;daikon.inv.binary.twoString.StdString$SubString;(return.url, return.stargazers_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.url is a substring of return.statuses_url;daikon.inv.binary.twoString.StdString$SubString;(return.url, return.statuses_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.url is a substring of return.subscribers_url;daikon.inv.binary.twoString.StdString$SubString;(return.url, return.subscribers_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.url is a substring of return.subscription_url;daikon.inv.binary.twoString.StdString$SubString;(return.url, return.subscription_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.url is a substring of return.tags_url;daikon.inv.binary.twoString.StdString$SubString;(return.url, return.tags_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.url is a substring of return.teams_url;daikon.inv.binary.twoString.StdString$SubString;(return.url, return.teams_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.url is a substring of return.trees_url;daikon.inv.binary.twoString.StdString$SubString;(return.url, return.trees_url);1;0;0;0
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT;return.url is a substring of return.hooks_url;daikon.inv.binary.twoString.StdString$SubString;(return.url, return.hooks_url);1;0;0;0
