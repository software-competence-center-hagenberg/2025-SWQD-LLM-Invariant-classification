pptname;invariant;invariantType;variables;tp;fp;enter;bug
main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::ENTER;input != null;daikon.inv.unary.scalar.NonZero;(input);0;0;1;0
main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT;input.user_id == return.owner.id;daikon.inv.binary.twoString.StringEqual;(input.user_id, return.owner.id);1;0;0;0
main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT;input.name == return.name;daikon.inv.binary.twoString.StringEqual;(input.name, return.name);1;0;0;0
main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT;input.description == return.description;daikon.inv.binary.twoString.StringEqual;(input.description, return.description);1;0;0;0
main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT;input.public == return.public;daikon.inv.binary.twoScalar.IntEqual;(input.public, return.public);1;0;0;0
main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT;input.collaborative == return.collaborative;daikon.inv.binary.twoScalar.IntEqual;(input.collaborative, return.collaborative);1;0;0;0
main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT;return.followers.total == return.tracks.offset;daikon.inv.binary.twoScalar.IntEqual;(return.followers.total, return.tracks.offset);1;0;0;0
main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT;return.followers.total == return.tracks.total;daikon.inv.binary.twoScalar.IntEqual;(return.followers.total, return.tracks.total);1;0;0;0
main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT;return.followers.total == size(return.images[]);daikon.inv.binary.twoScalar.IntEqual;(return.followers.total, size(return.images[..]));1;0;0;0
main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT;return.followers.total == size(return.tracks.items[]);daikon.inv.binary.twoScalar.IntEqual;(return.followers.total, size(return.tracks.items[..]));1;0;0;0
main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT;input != null;daikon.inv.unary.scalar.NonZero;(input);0;0;1;0
main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT;return != null;daikon.inv.unary.scalar.NonZero;(return);0;0;1;0
main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT;return.external_urls != null;daikon.inv.unary.scalar.NonZero;(return.external_urls);1;0;0;0
main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT;return.followers != null;daikon.inv.unary.scalar.NonZero;(return.followers);1;0;0;0
main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT;return.images != null;daikon.inv.unary.scalar.NonZero;(return.images);1;0;0;0
main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT;return.images[] == [];daikon.inv.unary.sequence.OneOfSequence;(return.images[..]);1;0;0;0
main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT;return.owner != null;daikon.inv.unary.scalar.NonZero;(return.owner);1;0;0;0
main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT;return.owner.external_urls != null;daikon.inv.unary.scalar.NonZero;(return.owner.external_urls);1;0;0;0
main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT;return.owner.followers == null;daikon.inv.unary.scalar.OneOfScalar;(return.owner.followers);1;0;0;0
main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT;"return.owner.type == ""user""";daikon.inv.unary.string.OneOfString;(return.owner.type);1;0;0;0
main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT;return.tracks != null;daikon.inv.unary.scalar.NonZero;(return.tracks);1;0;0;0
main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT;return.tracks.items != null;daikon.inv.unary.scalar.NonZero;(return.tracks.items);1;0;0;0
main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT;return.tracks.items[] == [];daikon.inv.unary.sequence.OneOfSequence;(return.tracks.items[..]);1;0;0;0
main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT;return.tracks.limit == 100;daikon.inv.unary.scalar.OneOfScalar;(return.tracks.limit);1;0;0;0
main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT;"return.type == ""playlist""";daikon.inv.unary.string.OneOfString;(return.type);1;0;0;0
